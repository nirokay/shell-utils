#!/usr/bin/env bash

UTILS=(
    "gac             "
    "Bash script to bulk-commit all changes."

    "nimdocgen       "
    "Bash script to automatically generate and deploy docs for projects using the Nim programming language."

    "python-webserver"
    "Bash script to quickly start a python3 webserver."

    "replace         "
    "Lua Script that simplifies the 'sed' syntax for easy character replacement."

    "updateall       "
    "Bash script to update all packages, supports many package managers.\n\
    -a,--async       Perform updates in parallel (opens multiple terminal windows, not all are supported)"

    "wtf-is-this     "
    "Bash script to inform you about what script does what... THIS is it actually!!"

    "zipdir          "
    "Bash script to zip a whole directory. It has the same name with only '.zip' appended."
)

QUERY="$*"
OUTPUT_ALL=()
OUTPUT_SPECIFIC=""

## now loop through the above array
for ID in "${!UTILS[@]}"; do
    if [ $(($ID%2)) -eq 1 ]; then
        continue
    fi
    COMMAND="${UTILS[$ID]}"
    DESCRIPTION="${UTILS[$(($ID+1))]}"
    OUTPUT_LINE="$COMMAND --> $DESCRIPTION"

    if [ "$QUERY" == "$(printf "%s" "$COMMAND"| sed "s/ //g")" ]; then
        OUTPUT_SPECIFIC="$OUTPUT_LINE"
        break
    fi

    OUTPUT_ALL+=("$OUTPUT_LINE")
done

EXIT_CODE=0

# Print out specific or entries, if `OUTPUT_SPECIFIC` is empty string:
if [ "$OUTPUT_SPECIFIC" != "" ]; then
    echo -e "$OUTPUT_SPECIFIC"
else
    if [ "$QUERY" != "" ]; then
        EXIT_CODE=1
        echo -e "Could not find '$QUERY'. Displaying all utils and their descriptions.\n"
    fi
    for LINE in "${OUTPUT_ALL[@]}"; do
        echo -e "$LINE"
    done
fi

exit $EXIT_CODE
