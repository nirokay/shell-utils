#!/usr/bin/env bash

# - Options -------------------------------------------------------------------

UPDATEALL_ASYNC=0


# - Colours -------------------------------------------------------------------

COL_RED='\033[0;31m'
COL_CLEAR='\033[0m'
COL_YELLOW='\033[1;33m'


# - Root permissions ----------------------------------------------------------

SUDO="sudo"
function trysudo() {
    BIN=$1
    SYNTAX=$2
    [ "$SYNTAX" == "" ] && SYNTAX="-h"

    $BIN "$SYNTAX" &> /dev/null
    return $?
}
if trysudo "sudo"; then
    SUDO="sudo"
elif trysudo "doas"; then
    SUDO="doas"
else
    echo -e "${COL_RED}This program only supports sudo and doas for privilege escalation."
    echo -e "Please install one of these. Meanwhile everything will be run with current users permissions.${COL_CLEAR}"
    SUDO=""
fi


# - Repositories --------------------------------------------------------------

COMMANDS=()
function cmd() {
    IS_SUDO=$1
    BIN=$2
    SYNTAX=$3
    VERSION_CMD=$4
    [ "$VERSION_CMD" == "" ] && VERSION_CMD="-v"

    # Return, if binary not found:
    if ! $BIN "$VERSION_CMD" &> /dev/null; then
        return 0
    fi

    PREFIX=""
    [ "$IS_SUDO" == "x" ] && PREFIX="$SUDO"
    [ "$PREFIX" != "" ] && PREFIX="$PREFIX "

    COMMANDS+=( "$PREFIX$BIN $SYNTAX" )
}

# System repositories:
cmd o "yay"     "-Syu"                 || cmd x "pacman" "-Syu"
cmd x "apt"     "update"     "help"
cmd x "apt"     "upgrade -y" "help"
cmd x "zypper"  "up"         "help"    || cmd x "dnf"    "upgrade" "--version" || cmd x "yum" "upgrade" "--version"

# Additional repositories:
cmd x "flatpak" "update -y"  "--help"
cmd x "snap"    "refresh"    "help"

# Additional updaters:
cmd o "omz"     "update"     "version"
cmd o "gitman"  "pull"       "help"


# - Async execution -----------------------------------------------------------

function launchterminalwithpayload() {
    # PAYLOAD="echo -e \"${COL_YELLOW}Executing '$COMMAND'${COL_CLEAR}\"; $*; echo Finished; read"
    PAYLOAD="$*"
    if konsole -h &> /dev/null; then
        konsole -e "$PAYLOAD" &
    else
        echo "Failed to find supported terminal emulator."
    fi
}


# - Execution -----------------------------------------------------------------

echo -e "${COL_YELLOW}The following commands will be executed:${COL_CLEAR}"
for COMMAND in "${COMMANDS[@]}"; do
    echo -e "\t$COMMAND"
done

printf "\nContinue? [Y/n] "
read -r CONTINUE
case "$CONTINUE" in
    N|n)
        echo -e "Aborting..."
        exit 1
        ;;
    *)
        echo -e "Continuing...\n"
        ;;
esac

for COMMAND in "${COMMANDS[@]}"; do
    echo -e "${COL_YELLOW}Executing '$COMMAND'${COL_CLEAR}"

    # Async or sync execution:
    if [ $UPDATEALL_ASYNC == 0 ]; then
        $COMMAND
    else
        launchterminalwithpayload "$COMMAND"
    fi
done
echo -e "${COL_YELLOW}Update completed!${COL_CLEAR}"
